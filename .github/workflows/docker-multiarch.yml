name: Build and Push Multi-Platform Docker Image

on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate version
        id: version
        run: |
          if [[ ${{ github.ref }} == refs/heads/dev ]]; then
            # 生成版本号：日期.提交次数.短哈希值
            VERSION=$(date +'%Y%m%d').$(git rev-list --count HEAD).$(git rev-parse --short HEAD)
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
            echo "TAG_SUFFIX=-dev" >> $GITHUB_ENV
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
            echo "TAG_SUFFIX=" >> $GITHUB_ENV
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/bilibili-audio-downloader
          tags: |
            type=raw,value=latest${{ env.TAG_SUFFIX }},enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' }}
            type=raw,value=${{ env.VERSION }}${{ env.TAG_SUFFIX }},enable=true
            type=ref,event=branch,suffix=${{ env.TAG_SUFFIX }}
            type=ref,event=pr,suffix=-pr-${{ github.event.number }}${{ env.TAG_SUFFIX }}
            type=sha,format=long,suffix=${{ env.TAG_SUFFIX }}

      - name: Build and push multi-platform Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update version file
        if: github.ref == 'refs/heads/dev'
        run: |
          echo ${{ env.VERSION }} > VERSION
          
      - name: Commit version update
        if: github.ref == 'refs/heads/dev'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add VERSION
          git commit -m "chore: update version to ${{ env.VERSION }}" || echo "No changes to commit"
          git push
