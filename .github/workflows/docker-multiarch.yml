# GitHub Actions 工作流配置
# 用于构建和推送多架构Docker镜像

name: Build and Push Multi-Platform Docker Image

# 触发条件：推送到main/dev分支，创建tag，或创建PR时
on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'  # 匹配所有版本标签
  pull_request:
    branches:
      - main
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # 设置权限：允许写入仓库内容和包
    permissions:
      contents: write
      packages: write

    steps:
      # 检出代码，获取完整git历史用于版本号生成
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # 生成版本号：dev分支使用日期.提交数.哈希值，main分支使用tag
      - name: Generate version
        id: version
        run: |
          if [[ ${{ github.ref }} == refs/heads/dev ]]; then
            VERSION=$(date +'%Y%m%d').$(git rev-list --count HEAD).$(git rev-parse --short HEAD)
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
            echo "TAG_SUFFIX=-dev" >> $GITHUB_ENV
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
            echo "TAG_SUFFIX=" >> $GITHUB_ENV
          fi

      # 设置QEMU，支持多架构构建
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 设置Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      # 缓存Docker层以加速构建
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 登录到Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/bilibili-audio-downloader
          tags: |
            type=raw,value=latest${{ env.TAG_SUFFIX }},enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' }}
            type=raw,value=${{ env.VERSION }}${{ env.TAG_SUFFIX }},enable=true
            type=ref,event=branch,suffix=${{ env.TAG_SUFFIX }}
            type=ref,event=pr,suffix=-pr-${{ github.event.number }}${{ env.TAG_SUFFIX }}
            type=sha,format=long,suffix=${{ env.TAG_SUFFIX }}

      - name: Build and push multi-platform Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # 临时修复缓存问题
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Update version file
        if: github.ref == 'refs/heads/dev'
        run: |
          echo ${{ env.VERSION }} > VERSION
          
      - name: Commit version update
        if: github.ref == 'refs/heads/dev'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add VERSION
          git commit -m "chore: update version to ${{ env.VERSION }}" || echo "No changes to commit"
          git push --force https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}
